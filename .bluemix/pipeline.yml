---
stages:
- name: Deploy Chatbot
  properties:
  - name: CHATBOT_JSON_URL
    value: '${CHATBOT_JSON_URL}'
    type: text
  - name: CHATBOT_NAME
    value: '${CHATBOT_NAME}'
    type: text
  triggers:
  - type: stage
  - enabled: true
  jobs:
  - name: Deploy Chatbot Assets
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: Load Chatbot Assets
    script: |
      #!/bin/bash -ex
      # Fetch the workspace json from the marketplace
      # This is largely lifted from:
      #  https://github.com/open-toolchain/watson-training-toolchain/blob/master/.bluemix/pipeline.yml

      if ! curl -L -o workspace.json "$CHATBOT_JSON_URL"; then
        echo "Failed to fetch workspace for chatbot $CHATBOT_NAME from $CHATBOT_JSON_URL."
        exit 1
      fi

      # Create the conversation service and name it after the chatbot
      if ! cf service $CHATBOT_NAME >/dev/null; then
        cf create-service conversation free "$CHATBOT_NAME"
      fi

      # Also create similarly named service key / credential for the service
      if ! cf service-key $CHATBOT_NAME $CHATBOT_NAME >/dev/null; then
        cf create-service-key "$CHATBOT_NAME" "$CHATBOT_NAME"
      fi

      # Query the service credential
      npm install -g json
      jsonkey=$( cf service-key "$CHATBOT_NAME" "$CHATBOT_NAME" | tail -n +3 )
      wcuser=$( echo $jsonkey | json username )
      wcpass=$( echo $jsonkey | json password )
      wcurl=$( echo $jsonkey | json url )

      # Create workspace and train it
      resp=$( curl --user $wcuser:$wcpass \
                 -H "Content-Type: application/json" \
                 -X POST -d @workspace.json \
                 $wcurl/v1/workspaces?version=2017-04-21 )
      echo $resp| json
      export WORKSPACE_ID=$( echo $resp | json workspace_id )
      if [ -z "${WORKSPACE_ID}" ]; then
        echo "Failed creating new workspace..."
        echo "If too many workspaces already, discard obsolete workspaces using: "
        echo "https://www.ibmwatsonconversation.com"
        echo "Select service instance:$CHATBOT_NAME in current org&space"
        exit 1
      fi
      echo "##############################################################"
      echo "Created and trained new workspace: WORKSPACE_ID: ${WORKSPACE_ID}"
      echo "##############################################################"

      resp=$( curl --user $wcuser:$wcpass -X GET \
              $wcurl/v1/workspaces/$WORKSPACE_ID?version=2017-04-21 )
      status=$?
      echo $resp| json
      resp_wsid=$( echo $resp | json workspace_id )
      if [ $status -ne 0 ] || [ "$resp_wsid" != "$WORKSPACE_ID" ]; then
        echo "Invalid workspace: $WORKSPACE_ID"
        echo "Administer your workspaces at: https://www.ibmwatsonconversation.com"
        exit 1
      fi
hooks:
- enabled: true
  label: null
  ssl_enabled: false
  url: https://devops-api.ng.bluemix.net/v1/messaging/webhook/publish
